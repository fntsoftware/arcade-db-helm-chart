apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "arcadedb.fullname" . }}
  annotations:
  {{- range $key, $value := .Values.annotations }}
  {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 4 }}
  {{- end }}
  labels:
    {{- include "arcadedb.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "arcadedb.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicas }}
  serviceName: {{ include "arcadedb.fullname" . }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  {{- if .Values.updateStrategy }}
  updateStrategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
      {{- range $key, $value := .Values.annotations }}
      {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arcadedb.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "arcadedb.fullname" . }}
          image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ARCADEDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: rootPassword
                  name: {{ include "arcadedb.fullname" . }}
                  optional: false
          command:
            - "bin/server.sh"
          {{- with .Values.args }}
          args: 
          {{- tpl . $  | nindent 12}}
          {{- end}}
          ports:
            - containerPort: 2480
              name: http
            - containerPort: 2424
              name: rpc
          {{- if .Values.service.gremlinPort }}
            - containerPort: 8182
              name: gremlin
            {{- end}}
          {{- with .Values.extraPorts }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe: {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: datadir
              mountPath: /mnt/data0
          {{- with .Values.extraVolumeMounts }}
            {{- tpl . $ | nindent 12 }}
          {{- end }}
        {{- with .Values.extraContainers }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
        {{- with .Values.extraVolumes }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.pvc.size }}
