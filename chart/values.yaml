credentials:
  # Root password for ArcadeDB server
  rootPassword: "SuperPass"

# Additional annotations
annotations: {}

# The number of replicas to create. If you increase this value you should add `arcadedb.ha` parameters to args section
# https://docs.arcadedb.com/#High-Availability
  # - "-Darcadedb.ha.enabled=true"
  # - "-Darcadedb.ha.replicationIncomingHost=0.0.0.0"
  # - "-Darcadedb.ha.serverList=arcadedb-0.arcadedb.{{ .Release.Namespace }}.svc.cluster.local:2424"
  # - "-Darcadedb.ha.k8s=true"
  # - "-Darcadedb.ha.k8sSuffix=.arcadedb.{{ .Release.Namespace }}.svc.cluster.local"

replicas: 1

# Docker image 
image:
  registry: docker.io
  repository: arcadedata/arcadedb
  tag: "24.11.1"
  pullPolicy: IfNotPresent

# Server's parameters
args: |
  - "-Darcadedb.dumpConfigAtStartup=true"
  - "-Darcadedb.server.name=${HOSTNAME}"
  - "-Darcadedb.server.rootPassword=${ARCADEDB_ROOT_PASSWORD}"
  - "-Darcadedb.server.databaseDirectory=/mnt/data0/databases"
  - "-Darcadedb.server.defaultDatabases=DemoDb[]"
  - "-Darcadedb.server.plugins=GremlinServer:com.arcadedb.server.gremlin.GremlinServerPlugin"


service:
  # The HTTP Service port
  httpPort: 2480
  # The RPC Service port
  rpcPort: 2424
  # The Gremlin Service port
  gremlinPort: 8182

# The resources section
resources:
  requests:
    memory: 512Mi
  limits:
    memory: 1Gi

# The security context for pod
podSecurityContext:
  fsGroup: 1000

# Pod affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - arcadedb
          topologyKey: kubernetes.io/hostname

pvc:
  # The PVC's size
  size: 10Gi

# Readiness probe configuration
readinessProbe:
  httpGet:
    path: /api/v1/ready
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 6

# Liveness probe configuration
livenessProbe:
  httpGet:
    path: /api/v1/ready
    port: http
  initialDelaySeconds: 180
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 6

# Pod management policy
podManagementPolicy: "OrderedReady"

# Update strategy
updateStrategy:
  type: RollingUpdate # RollingUpdate OR OnDelete